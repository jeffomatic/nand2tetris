// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM16K.hdl

/**
 * Memory of 16K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM16K {
    IN in[16], load, address[14];
    OUT out[16];

    PARTS:

    // Sub-RAMs

    RAM4K(in = in, load = SubRam000Load, address=address[0..11], out = SubRam000);
    RAM4K(in = in, load = SubRam001Load, address=address[0..11], out = SubRam001);
    RAM4K(in = in, load = SubRam010Load, address=address[0..11], out = SubRam010);
    RAM4K(in = in, load = SubRam011Load, address=address[0..11], out = SubRam011);

    // Load bit demultiplexing

    DMux4Way(
      in = load,
      sel = address[12..13],
      a = SubRam000Load,
      b = SubRam001Load,
      c = SubRam010Load,
      d = SubRam011Load
    );
    
    // Output multiplexing

    Mux4Way16(
      a = SubRam000,
      b = SubRam001,
      c = SubRam010,
      d = SubRam011,   
      sel = address[12..13],
      out = out
    );

}
